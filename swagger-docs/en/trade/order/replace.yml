swagger: "2.0"
info:
  description: "This API is used to replace order, modify quantity or price"
  version: "v1"
  title: "Replace Order"
paths:
  /v1/trade/order:
    put:
      access: "Trading Permissions"
      parameters:
        - name: "order_id"
          type: "string"
          description: "订单 ID"
          required: true
        - name: "quantity"
          type: "string"
          description: Replaced quantity,example: `100`
          required: true
        - name: "price"
          required: false
          description: Replaced price,example: `388.5`<br/><br/>
            `LO` / `ELO` / `ALO` / `ODD` / `LIT` Order Required
        - name: trigger_price
          required: false
          description: Trigger price,example: `388.5`<br/><br/>
            `LIT` / `MIT` Order Required
        - name: limit_offset
          required: false
          description: Limit offset amount<br/><br/>
            `TSLPAMT` / `TSLPPCT` Order Required
        - name: trailing_amount
          required: false
          description: Trailing amount<br/><br/>
            `TSLPAMT` / `TSMAMT` Order Required
        - name: trailing_percent
          required: false
          description: Trailing percent<br/><br/>
            `TSLPPCT` / `TSMAPCT` Order Required
        - name: remark
          required: false
          description: "Remark (Maximum 64 characters)"
      responses:
        "200":
          description: "The submission was successful and the order was commissioned."
        "400":
          description: "The replace was rejected with an incorrect request parameter."
      request_body:
        type: "python"
        value: |
          import os
          import json
          from longbridge.http import Auth, Config, HttpClient

          auth = Auth(os.getenv("LONGBRIDGE_APP_KEY"), os.getenv("LONGBRIDGE_APP_SECRET"), access_token=os.getenv("LONGBRIDGE_ACCESS_TOKEN"))
          http = HttpClient(auth, Config(base_url="https://openapi.longbridge.global"))

          payload = {
              "side": "Buy",
          }

          try:
            resp = http.put("/v1/trade/order", payload=payload)
            print(json.dumps(resp.data, indent=2))
          except Exception as e:
            print(f"Submit order error\ncode: {e.code}\nmessage: {e.message}")
      response_body: { "code": 0, "message": "success", "data": {} }
